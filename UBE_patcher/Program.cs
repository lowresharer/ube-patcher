using Mutagen.Bethesda;
using Mutagen.Bethesda.Plugins;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;
using SynUbePatcher.Settings;

namespace SynUbePatcher
{
    public class Program
    {
        static Lazy<PatcherSettings> Settings = null!;              

        public static async Task<int> Main(string[] args)
        {            
            //var exePath = Assembly.GetAssembly(typeof(Program))?.Location??"";
            //Print("EXE PATH: " + exePath);

            var excludedModKeys = new List<ModKey>
            {
                ModKey.FromFileName("Skyrim.esm"),
                ModKey.FromFileName("Update.esm"),
                ModKey.FromFileName("Dawnguard.esm"),
                ModKey.FromFileName("Dragonborn.esm"),
                ModKey.FromFileName("Hearthfires.esm"),
                ModKey.FromFileName("UBE_AllRace.esp")
            };

            var preferences = new PatcherPreferences()
            {
                IncludeDisabledMods = false,
                AddImplicitMasters = false,
                NoPatch = true,
                ExclusionMods = excludedModKeys
            };

            var debugArgs = new string[] {
                "run-patcher",
                "--OutputPath", "M:\\Data_test\\",
                "--GameRelease", "SkyrimSE",
                "--DataFolderPath", "M:\\Data_test\\",
                "--LoadOrderFilePath", "M:\\Data_test\\plugins.txt"
            };

            var a = await SynthesisPipeline.Instance
                 .SetAutogeneratedSettings(
                    nickname: "Settings",
                    path: "settings.json",
                    out Settings)
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)                
                .SetTypicalOpen(GameRelease.SkyrimSE, "YourPatcher.esp")              
                //.AddRunnabilityCheck(CheckRunnability)
                .Run(args);

            //Console.ReadKey();

            return a;
        }       
        
        static string DataFolderPath = "";

        public static void CheckRunnability(IRunnabilityState state)
        {
            //state.LoadOrder.AssertListsMod("UBE_AllRace.esp", "You need UBE_AllRace.esp to be loaded!");            
        }

        string[] kTargetRacesEditorIDs = new string[] 
        { 
            @"00UBE_BretonRace",
            @"00UBE_CustomRace01",
            @"00UBE_CustomRace02"
        };

        string[] kArmorAddonsTemplateEditorIDs = new string[]
       {
            @"UBE_TemplateAA",
            @"UBE_CustomRace01_TemplateAA",
            @"UBE_CustomRace02_TemplateAA"
       };

        string[] kModelTypesToSearch = new string[]
       {
            @"Male world model\MOD2",
            @"Female world model\MOD3",
            @"Male 1st Person\MOD4",
            @"Female 1st Person\MOD5"
       };

        string[] kArmorAddonElementsToNotUpdate = new string[]
        {
            @"Record Header",
            @"EDID - Editor ID",
            @"RNAM - Race",
            @"Additional Races"
        };

        //int iNakedSkinArmorRecordToIgnore =  00000D64; // Do not generate armor to override the Naked Skin vanilla armor  
        static string sUbePluginName = "UBE_AllRace.esp";
        
        string sArmorFilterRaceFileName = "Skyrim.esm";

        string sTargetRaceEdid = "00UBE_BretonRace";
        string sTargetRaceFileName = sUbePluginName;

        static string sTargetEspName = "UbeArmorPatch.esp";

        static void Print(string message, int step = 0)
        {
            var tabString = "";
            for (int i = 0; i < step; i++)
                tabString += "  ";
            Console.WriteLine($"{tabString}{message}");
        }
              
        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            var settings = Settings.Value;
            settings.UseSynthesisPatchPlugin = true;
            var patcher = new UbePatcher(state, settings);
            patcher.Patch();
        }
    }
}
